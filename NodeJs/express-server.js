///////////////////////////////////////////////////////////////////
//////////////                IMPORTS                //////////////
///////////////////////////////////////////////////////////////////

const express = require("express");
const Joi = require("joi"); // alternatives  -  zod
const bodyParser = require("body-parser");

///////////////////////////////////////////////////////////////////
//////////////            SERVER SETTINGS            //////////////
///////////////////////////////////////////////////////////////////

const app = express();
const port = 3000;

///////////////////////////////////////////////////////////////////
//////////////           SCHEMA VALIDATION           //////////////
///////////////////////////////////////////////////////////////////

const loginSchema = Joi.object().keys({
    username: Joi.string().min(3).max(10).required(),
    password: Joi.string().regex(/^[a-zA-Z0-9]{3,30}$/),
});

///////////////////////////////////////////////////////////////////
//////////////            INTERNAL FUNCTIONS         //////////////
///////////////////////////////////////////////////////////////////

const _logger = function (req, res, next) {
    console.log("logging");
    next();
};

const _randomMiddleware = (req, res, next) => {
    if ("some error") {
        res.status(500).message({
            message: "Some Error",
        });
    } else {
        next();
    }
};

///////////////////////////////////////////////////////////////////
//////////////           GLOBAL MIDDLEWARES          //////////////
///////////////////////////////////////////////////////////////////

app.use(bodyParser.json());
app.use(_logger);

///////////////////////////////////////////////////////////////////
//////////////                ROUTES                 //////////////
///////////////////////////////////////////////////////////////////

app.get("/", _randomMiddleware, (req, res) => res.send("Hello World!"));

app.post("/login", function (req, res) {
    const valid = Joi.validate(req.body, loginSchema).error === null;
    if (!valid) {
        res.status(422).json({
            status: "error",
            message: "Invalid request data",
            data: req.body,
        });
    } else {
        // happy days - login user
        res.send(`ok`);
    }
});

app.post("/update", function (req, res) {
    const { name, description } = req.body;
    res.send(`Name ${name}, desc ${description}`);
});

///////////////////////////////////////////////////////////////////
//////////////           GLOBAL ERROR CATCH          //////////////
///////////////////////////////////////////////////////////////////

app.use(function (err, req, res, next) {
    console.error(err.stack);
    res.status(500).send("Something broke!");
});

///////////////////////////////////////////////////////////////////
//////////////             LAUNCH SERVER             //////////////
///////////////////////////////////////////////////////////////////

app.listen(port, () => console.log(`Example app listening on port ${port}!`));
